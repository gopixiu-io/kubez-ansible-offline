---
- name: Gather facts
  setup:

- name: Check the network nics for all nodes
  debug:
    msg: >-
      检测到主机 {{ inventory_hostname }} 的网卡列表中不存在网卡 {{ network_interface }}，请确认 /etc/kubez/globals.yml 的网卡配置。
  failed_when: true
  when:
    - network_interface not in hostvars[inventory_hostname]['ansible_interfaces']

- name: Ensure localhost in /etc/hosts
  lineinfile:
    dest: /etc/hosts
    regexp: "^127.0.0.1.*"
    line: "127.0.0.1 localhost"
    state: present
  become: True

- name: Set system's hostname
  hostname:
    name: "{{ inventory_hostname }}"
  when:
    # all-in-one 部署的场景不修改主机名
    - inventory_hostname != "localhost"

- name: Generate /etc/hosts for all of the nodes
  blockinfile:
    dest: /etc/hosts
    marker: "# {mark} ANSIBLE GENERATED HOSTS"
    block: |
        {% for host in groups['baremetal'] %}
        {% set api_interface = hostvars[host]['api_interface'] %}
        {{ hostvars[host]['ansible_' + api_interface]['ipv4']['address'] }} {{ hostvars[host]['ansible_hostname'] }}
        {% endfor %}
  become: True

- name: Backup /etc/yum.repos.d if necessary
  command: mv /etc/yum.repos.d /etc/yum.repos.d.bak
  args:
    creates: /etc/yum.repos.d.bak
  when:
    - ansible_distribution == "CentOS"

- name: Ensure /etc/yum.repos.d exists
  file:
    path: /etc/yum.repos.d
    state: directory
  when:
    - ansible_distribution == "CentOS"

- name: Copy offline repos for nodes
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - {"src": offline.repo.j2, "dest": /etc/yum.repos.d/offline.repo, os: "CentOS"}
  when:
    - ansible_distribution == item.os

- name: Update yum cache
  yum:
    update_cache: yes
  when:
    - ansible_distribution == "CentOS"

- name: Install dependent packages for kubernetes nodes
  package:
    name: "{{ item }}"
    state: present
  loop:
    - "{{ common_dependent_packages }}"
  when:
    - inventory_hostname in groups['kubernetes']

- name: Change state of selinux
  selinux:
    policy: targeted
    state: "{{ selinux_state }}"
  become: true
  when:
    - change_selinux | bool
    - inventory_hostname in groups['baremetal']
    - ansible_distribution == 'CentOS'

# Try to stop and disable delegated service,
# let it go when not exists.
- name: Disable firewalld service
  service:
    name: "{{ item }}"
    state: stopped
    enabled: False
  failed_when: false
  loop: "{{ services_to_disabled }}"
  when:
    - inventory_hostname in groups['baremetal']
    - ansible_distribution == 'CentOS'

- name: Disable ufw service
  service:
    name: ufw
    state: stopped
    enabled: False
  failed_when: false
  when:
    - inventory_hostname in groups['baremetal']
    - ansible_distribution == 'Ubuntu'
